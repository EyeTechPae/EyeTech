<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yFkAAAAASUVORK5CYII=
</value>
  </data>
</root>